<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{BC34622B-5BFC-42D0-858A-331BECC048AE}</ProjectGuid>
    <RootNamespace>Revive</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\Common.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\Common.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\Common.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\Common.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>LibRevive32</TargetName>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>LibRevive32</TargetName>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>LibRevive64</TargetName>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>LibRevive64</TargetName>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NOMINMAX;VK_NO_PROTOTYPES;VK_USE_PLATFORM_WIN32_KHR;MICROPROFILE_ENABLED=1;MICROPROFILE_GPU_TIMERS=0;OVR_DLL_BUILD;GLEW_STATIC;DEBUG;_CRT_SECURE_NO_WARNINGS;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(Externals)microprofile;$(Externals)Detours\src;$(Externals)openvr\headers;$(Externals)LibOVR\Include;$(Externals)glad\include;$(Externals)Vulkan\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <AdditionalDependencies>Ws2_32.lib;opengl32.lib;dxgi.lib;dxguid.lib;dsound.lib;Winmm.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>$(IntDir)$(TargetName).lib</ImportLibrary>
      <IgnoreSpecificDefaultLibraries>libcmt.lib</IgnoreSpecificDefaultLibraries>
    </Link>
    <FxCompile>
      <HeaderFileOutput>%(Filename).hlsl.h</HeaderFileOutput>
    </FxCompile>
    <FxCompile>
      <ObjectFileOutput />
      <ShaderModel>4.0</ShaderModel>
      <VariableName>g_%(Filename)</VariableName>
    </FxCompile>
    <PostBuildEvent />
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(Externals)LibOVR\Include</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NOMINMAX;VK_NO_PROTOTYPES;VK_USE_PLATFORM_WIN32_KHR;MICROPROFILE_ENABLED=1;MICROPROFILE_GPU_TIMERS=0;OVR_DLL_BUILD;GLEW_STATIC;DEBUG;_CRT_SECURE_NO_WARNINGS;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(Externals)microprofile;$(Externals)Detours\src;$(Externals)openvr\headers;$(Externals)LibOVR\Include;$(Externals)glad\include;$(Externals)Vulkan\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <AdditionalDependencies>Ws2_32.lib;opengl32.lib;dxgi.lib;dxguid.lib;dsound.lib;Winmm.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>$(IntDir)$(TargetName).lib</ImportLibrary>
      <IgnoreSpecificDefaultLibraries>libcmt.lib</IgnoreSpecificDefaultLibraries>
    </Link>
    <FxCompile>
      <HeaderFileOutput>%(Filename).hlsl.h</HeaderFileOutput>
    </FxCompile>
    <FxCompile>
      <ObjectFileOutput />
      <ShaderModel>4.0</ShaderModel>
      <VariableName>g_%(Filename)</VariableName>
    </FxCompile>
    <PostBuildEvent />
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(Externals)LibOVR\Include</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NOMINMAX;VK_NO_PROTOTYPES;VK_USE_PLATFORM_WIN32_KHR;MICROPROFILE_ENABLED=0;MICROPROFILE_GPU_TIMERS=0;OVR_DLL_BUILD;GLEW_STATIC;NDEBUG;_CRT_SECURE_NO_WARNINGS;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(Externals)microprofile;$(Externals)Detours\src;$(Externals)openvr\headers;$(Externals)LibOVR\Include;$(Externals)glad\include;$(Externals)Vulkan\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Ws2_32.lib;opengl32.lib;dxgi.lib;dxguid.lib;dsound.lib;Winmm.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>$(IntDir)$(TargetName).lib</ImportLibrary>
    </Link>
    <FxCompile>
      <HeaderFileOutput>%(Filename).hlsl.h</HeaderFileOutput>
    </FxCompile>
    <FxCompile>
      <ObjectFileOutput />
      <ShaderModel>4.0</ShaderModel>
      <VariableName>g_%(Filename)</VariableName>
    </FxCompile>
    <PostBuildEvent />
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(Externals)LibOVR\Include</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NOMINMAX;VK_NO_PROTOTYPES;VK_USE_PLATFORM_WIN32_KHR;MICROPROFILE_ENABLED=0;MICROPROFILE_GPU_TIMERS=0;OVR_DLL_BUILD;GLEW_STATIC;NDEBUG;_CRT_SECURE_NO_WARNINGS;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(Externals)microprofile;$(Externals)Detours\src;$(Externals)openvr\headers;$(Externals)LibOVR\Include;$(Externals)glad\include;$(Externals)Vulkan\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Ws2_32.lib;opengl32.lib;dxgi.lib;dxguid.lib;dsound.lib;Winmm.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>$(IntDir)$(TargetName).lib</ImportLibrary>
    </Link>
    <FxCompile>
      <HeaderFileOutput>%(Filename).hlsl.h</HeaderFileOutput>
    </FxCompile>
    <FxCompile>
      <ObjectFileOutput />
      <ShaderModel>4.0</ShaderModel>
      <VariableName>g_%(Filename)</VariableName>
    </FxCompile>
    <PostBuildEvent />
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(Externals)LibOVR\Include</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\microprofile\microprofile.h" />
    <ClInclude Include="..\microprofile\microprofiledraw.h" />
    <ClInclude Include="..\microprofile\microprofilehtml.h" />
    <ClInclude Include="..\microprofile\microprofileui.h" />
    <ClInclude Include="CompositorBase.h" />
    <ClInclude Include="CompositorD3D.h" />
    <ClInclude Include="CompositorGL.h" />
    <ClInclude Include="CompositorVk.h" />
    <ClInclude Include="HapticsBuffer.h" />
    <ClInclude Include="OVR_CAPI.h" />
    <ClInclude Include="REV_Math.h" />
    <ClInclude Include="SessionDetails.h" />
    <ClInclude Include="InputManager.h" />
    <ClInclude Include="Session.h" />
    <ClInclude Include="Common.h" />
    <ClInclude Include="TextureBase.h" />
    <ClInclude Include="TextureD3D.h" />
    <ClInclude Include="TextureGL.h" />
    <ClInclude Include="TextureVk.h" />
    <ClInclude Include="vulkan.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\Externals\glad\src\glad.c" />
    <ClCompile Include="..\Externals\LibOVR\Shim\OVR_StereoProjection.cpp" />
    <ClCompile Include="CompositorBase.cpp" />
    <ClCompile Include="CompositorD3D.cpp" />
    <ClCompile Include="CompositorGL.cpp" />
    <ClCompile Include="CompositorVk.cpp" />
    <ClCompile Include="HapticsBuffer.cpp" />
    <ClCompile Include="REV_CAPI_Vk.cpp" />
    <ClCompile Include="SessionDetails.cpp" />
    <ClCompile Include="InputManager.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="microprofile.cpp" />
    <ClCompile Include="REV_CAPI.cpp" />
    <ClCompile Include="REV_CAPI_Audio.cpp" />
    <ClCompile Include="REV_CAPI_D3D.cpp" />
    <ClCompile Include="REV_CAPI_GL.cpp" />
    <ClCompile Include="Session.cpp" />
    <ClCompile Include="TextureBase.cpp" />
    <ClCompile Include="TextureD3D.cpp" />
    <ClCompile Include="TextureGL.cpp" />
    <ClCompile Include="TextureVk.cpp" />
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="CompositorShader.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
    </FxCompile>
    <FxCompile Include="MirrorShader.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
    </FxCompile>
    <FxCompile Include="VertexShader.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vertex</ShaderType>
    </FxCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
    <None Include="Input\action_manifest.json" />
    <None Include="Input\gamepad_default.json" />
    <None Include="Input\holographic_controller_default.json" />
    <None Include="Input\knuckles_default.json" />
    <None Include="Input\oculus_touch_default.json" />
    <None Include="Input\vive_controller_default.json" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Revive.rc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Externals\Detours.vcxproj">
      <Project>{8776bf45-11e0-4e82-9480-c9316cab5c42}</Project>
    </ProjectReference>
    <ProjectReference Include="..\Externals\openvr_api.vcxproj">
      <Project>{8940fe26-e0d4-4977-8a24-ab26ae687432}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>